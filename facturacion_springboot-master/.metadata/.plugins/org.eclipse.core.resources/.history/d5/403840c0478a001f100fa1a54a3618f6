package com.bolsaideas.datajpa.models.service;

import com.theokanning.openai.OpenAiService;
import com.theokanning.openai.completion.CompletionRequest;
import com.theokanning.openai.completion.CompletionResult;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;

@Service
public class OpenAIService {

    // Injecta la clave API desde application.properties
    @Value("${openai.api.key}")
    private String apiKey;

    // Método que usa el cliente de OpenAI para hacer una solicitud
    public void callOpenAI() {
        // Inicializa el servicio de OpenAI
        OpenAiService service = new OpenAiService(apiKey);

        // Crea una solicitud de ejemplo
        CompletionRequest request = CompletionRequest.builder()
                .prompt("¿Cómo está el clima hoy?")
                .model("text-davinci-003")  // Modelo utilizado
                .maxTokens(100)  // Máximo de tokens de la respuesta
                .build();

        // Envía la solicitud y obtiene la respuesta
        CompletionResult result = service.createCompletion(request);

        // Imprime el resultado en la consola
        System.out.println(result.getChoices().get(0).getText());
    }
}
